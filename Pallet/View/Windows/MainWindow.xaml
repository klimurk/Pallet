<Window
    x:Class="Pallet.MainWindow"
    ResxExtension.DefaultResxName="Pallet.Resources.Windows.MainWindow.MainWindowResource" Language="{UICulture}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="clr-namespace:Pallet.Infrastructure.Converters.Converters"
    xmlns:paramConverters="clr-namespace:Pallet.Infrastructure.Converters.ParametricConverters"
    mc:Ignorable="d"
    Title="Pallets"
    WindowState="Maximized"
    Icon="..\..\RobotIndustrial.ico"
    Height="768" Width="1366">

    <Window.Resources>
        <converters:AlarmsConverter x:Key="AlarmsConverter" Cutoff="1" />
        <converters:SignalToBoolConverter x:Key="SignalToBoolConverter" />
        <paramConverters:ActiveProfileConverter x:Key="ActiveProfileConverter" ActiveProfile="{Binding ActiveProfile.Name, UpdateSourceTrigger=PropertyChanged}" />
        <paramConverters:ActiveNailTypeConverter x:Key="ActiveNailTypeConverter" ActiveNailType="{Binding NailTypeActive.Name, UpdateSourceTrigger=PropertyChanged}" />
        <paramConverters:NailCounterConverter x:Key="NailCounterConverter" NailsLeftStartBlinking="20" />
    </Window.Resources>

    <Grid x:Name="Main_root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300*" MaxWidth="250" MinWidth="200" />
            <ColumnDefinition Width="1066*" />
        </Grid.ColumnDefinitions>
        <Border
            Background="{Binding Source={StaticResource BenthorBlue}}"
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height ="Auto" />
                    <RowDefinition Height ="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid
                    Grid.Row="0"
                    HorizontalAlignment="Stretch"
                    Margin="15 15 15 20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <md:PackIcon Kind="FilterList" Width="30" Height="30" Foreground="White"
                        VerticalAlignment="Center" Grid.Column="0" />
                    <TextBox
                        Grid.Column="1"
                        Text="{Binding FilterName, UpdateSourceTrigger=PropertyChanged}"

                        Margin="5 0"
                        Padding="10 5"
                        FontSize="20"
                        Foreground="White"
                        BorderBrush="SkyBlue"
                        IsEnabled="{Binding IsUserAuthorized, Mode=OneWay}"
                        VerticalContentAlignment="Center"
                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                        md:TextFieldAssist.DecorationVisibility="Visible" />
                </Grid>
                <ScrollViewer Margin="15 0 0 0" Grid.Row="1" VerticalAlignment="Stretch">
                    <ListBox ItemsSource ="{Binding ProfilesView}"  SelectedValue="{x:Null}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Button
                                    Content="{Binding Name}"
                                    Padding="10"
                                    Height="auto"
                                    FontSize="17"
                                    Command="{StaticResource OpenProfileWindowCommand}" CommandParameter="{Binding .}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{ Binding .,Converter={StaticResource ActiveProfileConverter},UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                    <Setter Property="Background" Value="OliveDrab" />
                                                    <Setter Property="BorderBrush" Value="OliveDrab" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="Margin" Value="0 0 0 15" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>

                <StackPanel Grid.Row="2"  Margin="15 10 ">

                    <DockPanel LastChildFill="False">

                        <TextBlock  FontSize="15" DockPanel.Dock="Left" Foreground="White" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="{Binding User.Name}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding User.Name.Length, FallbackValue=0, TargetNullValue=0}" Value="0">
                                            <Setter Property="Text" Value="{Resx Key=NotAutorized, ResxName=Pallet.Resources.Windows.MainWindow.MainWindowResource}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <Button  Height="auto" DockPanel.Dock="Right"  Padding="30 5" DataContext="{Binding User}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                                    <Setter Property="Content" Value="{md:PackIcon Kind=Login, Size=30}" />
                                    <Setter Property="Command" Value="{StaticResource OpenLoginWindowCommand}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding .,Converter={StaticResource UserConverter}, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                            <Setter Property="Content" Value="{md:PackIcon Kind=Logout, Size=30}" />
                                            <Setter Property="Command" Value="{Binding DataContext.LogoutCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DockPanel>
                </StackPanel>
            </Grid>
        </Border>
        <Grid Grid.Column="1" Grid.Row="0" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.RowSpan="2" Grid.Column="0" Height="100" Command="{Binding SendProfileCommand, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperButton}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="SendCircleOutline" VerticalAlignment="Center" Height="30" Width="30" />
                        <TextBlock Text="{Resx Start}" VerticalAlignment="Center" Margin="5 0 0 0" />
                    </StackPanel>
                </Button.Content>
            </Button>

            <Button Grid.Column="1" Height="50">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">

                        <md:PackIcon Height="30" Width="30" Kind="PlayCircleOutline" VerticalAlignment="Center" />
                        <TextBlock Text="{Resx Auto}" VerticalAlignment="Center" Margin="5 0 0 0" />
                    </StackPanel>
                </Button.Content>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAutoMode, NotifyOnSourceUpdated=True}" Value="true">
                                <Setter Property="Background" Value="OliveDrab" />
                                <Setter Property="BorderBrush" Value="OliveDrab" />
                                <Setter Property="Command" Value="{Binding ResetAutoModeCommand}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAutoMode, NotifyOnSourceUpdated=True}" Value="false">
                                <Setter Property="Command" Value="{Binding SetAutoModeCommand}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="2" Height="50">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">

                        <md:PackIcon Height="30" Width="30" Kind="StopPauseOutline" VerticalAlignment="Center" />
                        <TextBlock Text="{Resx Stop}" VerticalAlignment="Center" Margin="5 0 0 0" />
                    </StackPanel>
                </Button.Content>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStopMode , NotifyOnSourceUpdated=True}" Value="true">
                                <Setter Property="Background" Value="OliveDrab" />
                                <Setter Property="BorderBrush" Value="OliveDrab" />
                                <Setter Property="Command" Value="{Binding ResetStopModeCommand}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsStopMode , NotifyOnSourceUpdated=True}" Value="false">
                                <Setter Property="Command" Value="{Binding SetStopModeCommand}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Grid Grid.Column="3" Grid.ColumnSpan="2">
                <ComboBox
                        ItemsSource="{Binding Alarms, Converter={StaticResource AlarmsConverter}, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                        Height="50"
                        IsReadOnly="True">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation = "Horizontal">
                                <TextBlock Text="{Binding TimeStamp, StringFormat=dd.MM.yy HH:mm:ss :}"  Margin="0 0 10 0" />
                                <TextBlock Text = "{Binding ., Converter={StaticResource TranslateDatabaseConverter}}" Width="Auto" Margin="0 0 10 0" HorizontalAlignment="Left" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle }">
                            <Setter Property="Padding" Value="10" />
                            <Setter Property="Margin" Value="0 0 0 0" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontSize" Value="15" />
                            <Setter Property="FontWeight" Value="Heavy" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="IsHitTestVisible" Value="false" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <Button  IsHitTestVisible="False" Height="50">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">

                            <md:PackIcon Height="25" Width="30" Kind="AlertDecagram" VerticalAlignment="Center" />
                            <TextBlock Text="{Resx Alarms}" VerticalAlignment="Center" Margin="5 0 0 0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                            <Setter Property="FontSize" Value="15" />
                            <Setter Property="FontWeight" Value="Heavy" />
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Alarms, Converter={StaticResource AlarmsListConverter},UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="StartAlarmBlinking">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                            To="OrangeRed"
                                                            Duration="00:00:00.5"
                                                            RepeatBehavior="Forever" AutoReverse="True">
                                                    <ColorAnimation.EasingFunction>
                                                        <PowerEase EasingMode="EaseInOut" Power="7" />
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                            To="White"
                                                            Duration="00:00:00.5"
                                                            RepeatBehavior="Forever" AutoReverse="True">
                                                    <ColorAnimation.EasingFunction>
                                                        <PowerEase EasingMode="EaseInOut" Power="7" />
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="StartAlarmBlinking" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <Button   Grid.Column="1" Grid.Row="1" Height="50" Command="{Binding ShowManualViewCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="Gamepad" Margin="0 0 5 0" Width="25" Height="25" />
                        <TextBlock Text="{Resx Manual}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsManualViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button   Grid.Column="2" Grid.Row="1" Height="50" Command="{Binding ShowPalletViewCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="ShippingPallet" Margin="0 0 5 0" Width="25" Height="25" />
                        <TextBlock Text="{Resx Pallet}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>

                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsPalletViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button   Grid.Column="3" Grid.Row="1" Height="50" Command="{Binding ShowAlarmViewCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="Alarm" Margin="0 0 5 0" Width="25" Height="25" />
                        <TextBlock Text="{Resx AlarmHistory}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsAlarmViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button   Grid.Column="4" Grid.Row="1" Height="50" Command="{Binding ShowLogViewCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="Event" Margin="0 0 5 0" Width="25" Height="25" />
                        <TextBlock Text="{Resx LogHistory}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>

                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsLogViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <ContentControl Grid.Column="1" Grid.Row="1" Height="Auto"  Content="{Binding CurrentModel}" />
        <Border Grid.Column="1"  Grid.Row="2" Padding="5 5 10 5" Background="{StaticResource BenthorBlue}">

            <DockPanel
            LastChildFill="False">

                <Button
                    DockPanel.Dock="Right"
                    Margin="10 0 0 0"
                    Height="auto"
                    x:Name="popupTarget"
                    BorderBrush="{x:Null}"
                    Padding="10 6"
                    VerticalAlignment="center"
                    Command="{Binding OPCConnectCommand }"
                    Style="{StaticResource MaterialDesignRaisedDarkButton}">
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon
                        Height="30"
                        Width="30">
                            <md:PackIcon.Style>
                                <Style TargetType="md:PackIcon">
                                    <Setter Property="Kind" Value="Connection" />
                                    <Setter Property="Foreground" Value="Yellow" />
                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding ConnectionStatus, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                            <Setter Property="Foreground" Value="GreenYellow" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ConnectionStatus, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Name="StartBlinking">
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                            To="OrangeRed"
                                                            Duration="00:00:00.5"
                                                            RepeatBehavior="Forever" AutoReverse="True">
                                                            <ColorAnimation.EasingFunction>
                                                                <PowerEase EasingMode="EaseInOut" Power="7" />
                                                            </ColorAnimation.EasingFunction>
                                                        </ColorAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="StartBlinking" />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </md:PackIcon.Style>
                        </md:PackIcon>
                        <md:PopupEx  x:Name="Popup_OPC" Placement="Top" VerticalOffset="-10" HorizontalOffset="0" PopupAnimation="Slide" PlacementTarget="{Binding ElementName=popupTarget}">
                            <md:PopupEx.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ConnectionStatus }" Value="false">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Name="Popup">
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen">
                                                            <DiscreteBooleanKeyFrame KeyTime="00:00:00.00" Value="true" />
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>

                                            <DataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="Popup" />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </md:PopupEx.Style>
                            <md:PackIcon Kind="alert" Foreground="OrangeRed" Background="White"  Width="50" Height="50" />
                        </md:PopupEx>
                    </StackPanel>
                </Button>
                <Button DockPanel.Dock="Right" Style="{StaticResource MaterialDesignIconButton}" Command="{Binding StartWinccCommand}">
                    <Image Source="../../wincc.ico" Stretch="UniformToFill" />
                </Button>
                <ComboBox
                    DockPanel.Dock="Right"
                    IsSynchronizedWithCurrentItem="True"
                        HorizontalAlignment="Center"
                        Height="auto"
                        Padding="0"
                        BorderBrush="{x:Null}"
                        Style="{StaticResource MaterialDesignComboBox}"
                        ItemsSource="{Binding Langs, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                        SelectedItem="{Binding SelectedLang}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Image  Source="{Binding IconURI, Converter={StaticResource ImageConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}" />
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <Button Content="Copy" DockPanel.Dock="Right" Command="{Binding CopyDatabaseCommand}" Margin="0 0 10 0" />
                <ItemsControl ItemsSource ="{Binding NailTypesView }">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock  FontSize="16" Padding="10 10" VerticalAlignment="Stretch">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="Bisque" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{ Binding ., Converter={StaticResource ActiveNailTypeConverter}}" Value="true">
                                                <Setter Property="Background" Value="OliveDrab" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{ Binding ., Converter={StaticResource NailCounterConverter}}" Value="true">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard Name="StartBlinking">
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                            To="OrangeRed"
                                                            Duration="00:00:00.5"
                                                            RepeatBehavior="Forever" AutoReverse="True">
                                                                <ColorAnimation.EasingFunction>
                                                                    <PowerEase EasingMode="EaseInOut" Power="7" />
                                                                </ColorAnimation.EasingFunction>
                                                            </ColorAnimation>
                                                            <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                            To="White"
                                                            Duration="00:00:00.5"
                                                            RepeatBehavior="Forever" AutoReverse="True">
                                                                <ColorAnimation.EasingFunction>
                                                                    <PowerEase EasingMode="EaseInOut" Power="7" />
                                                                </ColorAnimation.EasingFunction>
                                                            </ColorAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <RemoveStoryboard BeginStoryboardName="StartBlinking" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                    <TextBlock Text="{Binding Dock, StringFormat=[{0}]}" VerticalAlignment="Center" />
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
                                    <TextBlock Text="{Binding NailLeftCounter, StringFormat=({0}) }" VerticalAlignment="Center" />
                        </TextBlock>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </Border>
    </Grid>
</Window>