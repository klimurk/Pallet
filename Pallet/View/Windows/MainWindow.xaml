<Window
    x:Class="Pallet.MainWindow"
    ResxExtension.DefaultResxName="Pallet.Resources.Windows.MainWindow.MainWindowResource" Language="{UICulture}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:paramConverters="clr-namespace:Pallet.Infrastructure.Converters.ParametricConverters"
    xmlns:m="clr-namespace:Pallet.Models"
    xmlns:converters="clr-namespace:Pallet.Infrastructure.Converters.Converters"
    Title="Pallets" Height="768" Width="1366">

    <Window.Resources>
        <converters:AlarmsConverter x:Key="AlarmsConverter" Cutoff="1" />
        <converters:SignalToBoolConverter x:Key="SignalToBoolConverter" />
        <paramConverters:ActiveProfileConverter x:Key="ActiveProfileConverter" ActiveProfile="{Binding ActiveProfile.Name, UpdateSourceTrigger=PropertyChanged}" />
    </Window.Resources>

    <Grid x:Name="Main_root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300*" MaxWidth="250" MinWidth="200" />
            <ColumnDefinition Width="1066*" />
        </Grid.ColumnDefinitions>
        <Border
            Background="{Binding Source={StaticResource BenthorBlue}}"
            Padding="15"
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height ="Auto" />
                    <RowDefinition Height ="*" />
                </Grid.RowDefinitions>

                <StackPanel
                    Grid.Row="0"
                    Orientation="Horizontal"
                    VerticalAlignment="Top"
                    Width="Auto"
                    Margin="0 0 0 10">
                    <TextBlock
                        Foreground="White"
                        Text="{Resx Key=Filter}"
                        Width="Auto"
                        FontSize="20"
                        VerticalAlignment="Center" />
                    <TextBox
                        Text="{Binding FilterName, UpdateSourceTrigger=PropertyChanged}"
                        Width="180"
                        Margin="5,0,5,0"
                        FontSize="20"
                        Foreground="White"
                        Style="{StaticResource MaterialDesignTextBox}"
                        materialDesign:TextFieldAssist.DecorationVisibility="Visible" />
                </StackPanel>
                <ScrollViewer Grid.Row="1" VerticalAlignment="Stretch">
                    <ListBox ItemsSource ="{Binding ProfilesView}" Grid.Row="2">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Button
                                    Content="{Binding Name}"
                                    Padding="10"
                                    Height="auto"
                                    FontSize="17"
                                    Command="{StaticResource OpenProfileWindowCommand}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{ Binding .,Converter={StaticResource ActiveProfileConverter},UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                    <Setter Property="Background" Value="OliveDrab" />
                                                    <Setter Property="BorderBrush" Value="OliveDrab" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="Margin" Value="0 0 0 15" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>
            </Grid>
        </Border>
        <Grid Grid.Column="1" Grid.Row="0" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Button Grid.RowSpan="2" Grid.Column="0" Height="100"
                    Command="{Binding SendDataProfileCommand}"  Style="{StaticResource MaterialDesignPaperButton}" Content="{Resx Start}" />

            <Button Grid.Column="1" Height="50"  Content="{Resx Auto}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAutoMode.Value, Converter={StaticResource SignalToBoolConverter}}" Value="true">
                                <Setter Property="Background" Value="OliveDrab" />
                                <Setter Property="BorderBrush" Value="OliveDrab" />
                                <Setter Property="Command" Value="{Binding ResetAutoModeCommand}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAutoMode.Value, Converter={StaticResource SignalToBoolConverter}}" Value="false">
                                <Setter Property="Command" Value="{Binding SetAutoModeCommand}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="2" Height="50"  Content="{Resx Stop}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStopMode.Value, Converter={StaticResource SignalToBoolConverter}}" Value="true">
                                <Setter Property="Background" Value="OliveDrab" />
                                <Setter Property="BorderBrush" Value="OliveDrab" />
                                <Setter Property="Command" Value="{Binding ResetStopModeCommand}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsStopMode.Value, Converter={StaticResource SignalToBoolConverter}}" Value="false">
                                <Setter Property="Command" Value="{Binding SetStopModeCommand}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Grid Grid.Column="3">
                <ComboBox
                        ItemsSource="{Binding Alarms, Converter={StaticResource AlarmsConverter}, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                        Height="50"
                        IsReadOnly="True">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation = "Horizontal" Name="AlarmBlock">
                                <TextBlock Text="{Binding TimeStamp, StringFormat=dd.MM.yy HH:mm:ss :}"  Margin="0 0 10 0" />
                                <TextBlock Text = "{Binding Info.Alarmtext1}" Width="Auto" Margin="0 0 10 0" HorizontalAlignment="Left" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle }">
                            <Setter Property="Padding" Value="10" />
                            <Setter Property="Margin" Value="0 0 0 0" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontSize" Value="15" />
                            <Setter Property="FontWeight" Value="Heavy" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <Button Content="{Resx Alarms}" IsHitTestVisible="False" Height="50">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                            <Setter Property="FontSize" Value="15" />
                            <Setter Property="FontWeight" Value="Heavy" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Alarms, Converter={StaticResource AlarmsListConverter},UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=False}" Value="true">
                                    <Setter Property="Background" Value="OrangeRed" />
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <Button Name="Menu_Btn_Mode_Manual"  Content="{Resx Manual}" Grid.Column="1" Grid.Row="1" Height="50" Command="{Binding ShowManualViewCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsManualViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Name="Menu_Btn_Mode_Pallet" Content="{Resx Pallet}" Grid.Column="2" Grid.Row="1" Height="50" Command="{Binding ShowPalletViewCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsPalletViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Name="Menu_Btn_Mode_AlarmView"  Content="{Resx AlarmHistory}" Grid.Column="3" Grid.Row="1" Height="50" Command="{Binding ShowAlarmViewCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentViewModelIsAlarmViewModel}" Value="true">
                                <Setter Property="Background" Value="DeepSkyBlue" />
                                <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <ContentControl Grid.Column="1" Grid.Row="1" Height="Auto"  Content="{Binding CurrentModel}" />
        <DockPanel Grid.Column="1" Grid.Row="2">
            <DockPanel.Background>
                <LinearGradientBrush StartPoint="0 0" EndPoint=" 1 0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.1" Color="{Binding Path=Color, Source={StaticResource BenthorBlue}}" />
                        <GradientStop Offset="1" Color="{Binding Path=Color,Source={StaticResource BenthorLightBlue}}" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </DockPanel.Background>
            <Button  DockPanel.Dock="Right" Margin="0 0 10 0" Background="Transparent" BorderBrush="{x:Null}" Height="15" Width="15" Padding="0">

                <Canvas Width="15" Height="15">
                    <Ellipse>
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Width"  Value="15" />
                                <Setter Property="Height"  Value="15" />
                                <Setter Property="StrokeThickness"  Value="0" />
                                <Setter Property="Fill"  Value="OrangeRed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{ Binding ConnectionStatus}" Value="true">
                                        <Setter Property="Fill" Value="GreenYellow" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Canvas>
            </Button>

            <Button DockPanel.Dock="Right"
                    Padding="10, 0" Margin="0 0 10 0"
                    HorizontalAlignment="Left"
                    Content="{Resx ConnectPLC}"
                    Style="{StaticResource MaterialDesignRaisedDarkButton}"
                    Command="{Binding OPCConnectCommand }" />
            <ComboBox
                DockPanel.Dock="Left"
                IsSynchronizedWithCurrentItem="True"
                HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center"
                Height="30" Width="60"
                Padding="0"
                Style="{StaticResource MaterialDesignComboBox}"
                ItemsSource="{Binding Langs, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                SelectedItem="{Binding SelectedLang}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Image MaxWidth="25" Source="{Binding IconURI, Converter={StaticResource ImageConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}" />
                </ComboBox.ItemContainerStyle>
            </ComboBox>
            <TextBlock DockPanel.Dock="Left" Margin="20 0 0 0" FontSize="15" Foreground="White" VerticalAlignment="Center"
            Text="{Binding User.Name}" />
            <Button DockPanel.Dock="Left" Margin="20 0 0 0" Padding="20 0"
                DataContext="{Binding User}" Content="{Resx Login}" Command="{StaticResource OpenLoginWindowCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding .,Converter={StaticResource UserConverter}, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding .,Converter={StaticResource UserConverter}, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button DockPanel.Dock="Left" Margin="20 0 0 0" Padding="20 0"
                DataContext="{Binding User}" Content="{Resx Logout}" Command="{Binding DataContext.LogoutCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding .,Converter={StaticResource UserConverter}, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding .,Converter={StaticResource UserConverter}, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock />
        </DockPanel>
    </Grid>
</Window>