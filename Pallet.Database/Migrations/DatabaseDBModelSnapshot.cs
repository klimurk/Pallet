// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pallet.Database.Context;

#nullable disable

namespace Pallet.Database.Migrations
{
    [DbContext(typeof(DatabaseDB))]
    partial class DatabaseDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pallet.Database.Entities.Log.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDR");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIMESTAMP");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VAL");

                    b.HasKey("ID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Pallet.Database.Entities.Log.SystemEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("ID");

                    b.ToTable("SYSEVENT");
                });

            modelBuilder.Entity("Pallet.Database.Entities.OPC.Alarm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ALM_ADDRESS");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<bool>("Inverted")
                        .HasColumnType("bit")
                        .HasColumnName("INVERTED");

                    b.Property<int>("NR")
                        .HasColumnType("int")
                        .HasColumnName("ALM_NR");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ALM_NAME");

                    b.Property<string>("Priority")
                        .HasColumnType("char(1)")
                        .HasColumnName("PRIO");

                    b.Property<string>("StopType")
                        .HasColumnType("char(1)")
                        .HasColumnName("STYPE");

                    b.HasKey("ID");

                    b.ToTable("ALARM_DEF");
                });

            modelBuilder.Entity("Pallet.Database.Entities.OPC.AlarmLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ALM_ADDRESS");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<bool>("Gone")
                        .HasColumnType("bit")
                        .HasColumnName("GONE");

                    b.Property<bool>("Inverted")
                        .HasColumnType("bit")
                        .HasColumnName("INVERTED");

                    b.Property<int>("NR")
                        .HasColumnType("int")
                        .HasColumnName("ALM_NR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ALM_NAME");

                    b.Property<string>("Priority")
                        .HasColumnType("char(1)")
                        .HasColumnName("PRIO");

                    b.Property<string>("StopType")
                        .HasColumnType("char(1)")
                        .HasColumnName("STYPE");

                    b.Property<DateTime?>("TimestampEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIMESTAMP2");

                    b.Property<DateTime>("TimestampStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIMESTAMP1");

                    b.HasKey("ID");

                    b.ToTable("ALARM_LOG");
                });

            modelBuilder.Entity("Pallet.Database.Entities.OPC.Signal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SIG_ADDRESS");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC3");

                    b.Property<string>("Device")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SIG_NAME");

                    b.HasKey("ID");

                    b.ToTable("SIGNALS_DEF");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Products.ElementPosition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ELE_ID")
                        .HasColumnType("int");

                    b.Property<short>("Layer")
                        .HasColumnType("smallint")
                        .HasColumnName("LAYER");

                    b.Property<bool>("OutLN")
                        .HasColumnType("bit")
                        .HasColumnName("OUTLN");

                    b.Property<int?>("PROD_ID")
                        .HasColumnType("int");

                    b.Property<int>("PosID")
                        .HasColumnType("int")
                        .HasColumnName("POS_ID");

                    b.Property<int>("PosX")
                        .HasColumnType("int")
                        .HasColumnName("POSX");

                    b.Property<int>("PosY")
                        .HasColumnType("int")
                        .HasColumnName("POSY");

                    b.Property<int>("PosZ")
                        .HasColumnType("int")
                        .HasColumnName("POSZ");

                    b.HasKey("ID");

                    b.HasIndex("ELE_ID");

                    b.HasIndex("PROD_ID");

                    b.ToTable("WPROD_ELE_POS");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Products.Nail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Alt")
                        .HasColumnType("int")
                        .HasColumnName("ALT");

                    b.Property<int>("Angle1")
                        .HasColumnType("int")
                        .HasColumnName("ANGLE1");

                    b.Property<int>("Angle2")
                        .HasColumnType("int")
                        .HasColumnName("ANGLE2");

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE");

                    b.Property<int>("MoveNextType")
                        .HasColumnType("int")
                        .HasColumnName("MOVE_TO_NEXT");

                    b.Property<int?>("NAILER_ID")
                        .HasColumnType("int");

                    b.Property<bool>("NailFix")
                        .HasColumnType("bit")
                        .HasColumnName("NAIL_FIX");

                    b.Property<int>("NailID")
                        .HasColumnType("int")
                        .HasColumnName("NAIL_ID");

                    b.Property<int?>("PROD_ID")
                        .HasColumnType("int");

                    b.Property<int>("PosX")
                        .HasColumnType("int")
                        .HasColumnName("POSX");

                    b.Property<int>("PosY")
                        .HasColumnType("int")
                        .HasColumnName("POSY");

                    b.Property<int>("PosZ")
                        .HasColumnType("int")
                        .HasColumnName("POSZ");

                    b.HasKey("ID");

                    b.HasIndex("NAILER_ID");

                    b.HasIndex("PROD_ID");

                    b.ToTable("WPROD_NAIL_POS");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Products.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESC1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESC2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESC3");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("WPROD_NAME");

                    b.Property<bool>("Preset")
                        .HasColumnType("bit")
                        .HasColumnName("PRESET");

                    b.Property<int>("Prod")
                        .HasColumnType("int")
                        .HasColumnName("PROD");

                    b.Property<int>("Size1X")
                        .HasColumnType("int")
                        .HasColumnName("SIZE1_X");

                    b.Property<int>("Size1Y")
                        .HasColumnType("int")
                        .HasColumnName("SIZE1_Y");

                    b.Property<int>("Size1Z")
                        .HasColumnType("int")
                        .HasColumnName("SIZE1_Z");

                    b.Property<int>("Size2X")
                        .HasColumnType("int")
                        .HasColumnName("SIZE2_X");

                    b.Property<int>("Size2Y")
                        .HasColumnType("int")
                        .HasColumnName("SIZE2_Y");

                    b.Property<int>("Size2Z")
                        .HasColumnType("int")
                        .HasColumnName("SIZE2_Z");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("TYPE");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("WPROD_DEF");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.Profile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREA_BY");

                    b.Property<DateTime>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_CREA");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_CHNG");

                    b.Property<DateTime?>("DateLastUse")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_OPEN");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESC1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESC2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESC3");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PROFILE_NAME");

                    b.Property<int?>("WTABLE_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("WTABLE_ID");

                    b.ToTable("PROFILE_DEF");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.ProfileProducts", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ProductId", "ProfileId", "Position");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileProducts");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.ProfileTools", b =>
                {
                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ToolId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileTools");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Tables.Table", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("B_ENA");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("WTABLE_NAME");

                    b.Property<int>("PlaceA1OffsetX")
                        .HasColumnType("int")
                        .HasColumnName("A1_OFFS_X");

                    b.Property<int>("PlaceA1OffsetY")
                        .HasColumnType("int")
                        .HasColumnName("A1_OFFS_Y");

                    b.Property<int>("PlaceA2OffsetX")
                        .HasColumnType("int")
                        .HasColumnName("A2_OFFS_X");

                    b.Property<int>("PlaceA2OffsetY")
                        .HasColumnType("int")
                        .HasColumnName("A2_OFFS_Y");

                    b.Property<int>("PlaceB1OffsetX")
                        .HasColumnType("int")
                        .HasColumnName("B1_OFFS_X");

                    b.Property<int>("PlaceB1OffsetY")
                        .HasColumnType("int")
                        .HasColumnName("B1_OFFS_Y");

                    b.Property<int>("PlaceB2OffsetX")
                        .HasColumnType("int")
                        .HasColumnName("B2_OFFS_X");

                    b.Property<int>("PlaceB2OffsetY")
                        .HasColumnType("int")
                        .HasColumnName("B2_OFFS_Y");

                    b.Property<int>("SideASizeX")
                        .HasColumnType("int")
                        .HasColumnName("A_SIZE_X");

                    b.Property<int>("SideASizeY")
                        .HasColumnType("int")
                        .HasColumnName("A_SIZE_Y");

                    b.Property<int>("SideBSizeX")
                        .HasColumnType("int")
                        .HasColumnName("B_SIZE_X");

                    b.Property<int>("SideBSizeY")
                        .HasColumnType("int")
                        .HasColumnName("B_SIZE_Y");

                    b.Property<int>("WorkAreaAOffsetX")
                        .HasColumnType("int")
                        .HasColumnName("A_WA_OFFS_X");

                    b.Property<int>("WorkAreaAOffsetY")
                        .HasColumnType("int")
                        .HasColumnName("A_WA_OFFS_Y");

                    b.Property<int>("WorkAreaASizeX")
                        .HasColumnType("int")
                        .HasColumnName("A_WA_SIZE_X");

                    b.Property<int>("WorkAreaASizeY")
                        .HasColumnType("int")
                        .HasColumnName("A_WA_SIZE_Y");

                    b.Property<int>("WorkAreaBOffsetX")
                        .HasColumnType("int")
                        .HasColumnName("B_WA_OFFS_X");

                    b.Property<int>("WorkAreaBOffsetY")
                        .HasColumnType("int")
                        .HasColumnName("B_WA_OFFS_Y");

                    b.Property<int>("WorkAreaBSizeX")
                        .HasColumnType("int")
                        .HasColumnName("B_WA_SIZE_X");

                    b.Property<int>("WorkAreaBSizeY")
                        .HasColumnType("int")
                        .HasColumnName("B_WA_SIZE_Y");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("WTABLE_DEF");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Tools.Tool", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ID");

                    b.ToTable("WTABLE_TOOLS");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Types.Element", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("ELE_CNT");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC3");

                    b.Property<short>("Direction")
                        .HasColumnType("smallint")
                        .HasColumnName("WOOD_DIR");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ELE_NAME");

                    b.Property<int>("SizeX")
                        .HasColumnType("int")
                        .HasColumnName("SIZEX");

                    b.Property<int>("SizeY")
                        .HasColumnType("int")
                        .HasColumnName("SIZEY");

                    b.Property<int>("SizeZ")
                        .HasColumnType("int")
                        .HasColumnName("SIZEZ");

                    b.HasKey("ID");

                    b.ToTable("WPROD_ELEMENTS");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Types.Nailer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<long>("Color")
                        .HasColumnType("bigint")
                        .HasColumnName("MCOLOR");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC1");

                    b.Property<string>("DescriptionGe")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC2");

                    b.Property<string>("DescriptionLocal")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC3");

                    b.Property<int>("Dock")
                        .HasColumnType("int")
                        .HasColumnName("DOCK");

                    b.Property<int>("InternalID")
                        .HasColumnType("int")
                        .HasColumnName("NAILER_ID");

                    b.Property<int>("Lenght")
                        .HasColumnType("int")
                        .HasColumnName("NLENGTH");

                    b.Property<int>("NailSize")
                        .HasColumnType("int")
                        .HasColumnName("NSIZE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NAILER_NAME");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasColumnName("MSIZE");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasColumnName("NWIDTH");

                    b.HasKey("ID");

                    b.ToTable("NAILER_DEF");
                });

            modelBuilder.Entity("Pallet.Database.Entities.Users.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("USER_DESC");

                    b.Property<string>("Hashcode")
                        .HasColumnType("char(64)")
                        .HasColumnName("USER_HASH");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USER_NAME")
                        .HasColumnOrder(1);

                    b.Property<int>("RoleNum")
                        .HasColumnType("int")
                        .HasColumnName("USER_ROLE");

                    b.HasKey("ID");

                    b.ToTable("PROG_USER");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Products.ElementPosition", b =>
                {
                    b.HasOne("Pallet.Database.Entities.ProfileData.Types.Element", "Element")
                        .WithMany("Positions")
                        .HasForeignKey("ELE_ID");

                    b.HasOne("Pallet.Database.Entities.ProfileData.Products.Product", "Product")
                        .WithMany("Elements")
                        .HasForeignKey("PROD_ID");

                    b.Navigation("Element");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Products.Nail", b =>
                {
                    b.HasOne("Pallet.Database.Entities.ProfileData.Types.Nailer", "Nailer")
                        .WithMany("Nails")
                        .HasForeignKey("NAILER_ID");

                    b.HasOne("Pallet.Database.Entities.ProfileData.Products.Product", "Product")
                        .WithMany("Nails")
                        .HasForeignKey("PROD_ID");

                    b.Navigation("Nailer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.Profile", b =>
                {
                    b.HasOne("Pallet.Database.Entities.ProfileData.Tables.Table", "Table")
                        .WithMany("Profiles")
                        .HasForeignKey("WTABLE_ID");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.ProfileProducts", b =>
                {
                    b.HasOne("Pallet.Database.Entities.ProfileData.Products.Product", "Product")
                        .WithMany("ProfileProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pallet.Database.Entities.ProfileData.Profiles.Profile", "Profile")
                        .WithMany("ProfileProducts")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.ProfileTools", b =>
                {
                    b.HasOne("Pallet.Database.Entities.ProfileData.Profiles.Profile", "Profile")
                        .WithMany("ProfileTools")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pallet.Database.Entities.ProfileData.Tools.Tool", "Tool")
                        .WithMany("ProfileTools")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Products.Product", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("Nails");

                    b.Navigation("ProfileProducts");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Profiles.Profile", b =>
                {
                    b.Navigation("ProfileProducts");

                    b.Navigation("ProfileTools");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Tables.Table", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Tools.Tool", b =>
                {
                    b.Navigation("ProfileTools");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Types.Element", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Pallet.Database.Entities.ProfileData.Types.Nailer", b =>
                {
                    b.Navigation("Nails");
                });
#pragma warning restore 612, 618
        }
    }
}
