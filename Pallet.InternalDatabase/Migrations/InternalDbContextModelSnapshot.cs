// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pallet.InternalDatabase.Context;

#nullable disable

namespace Pallet.InternalDatabase.Migrations
{
    [DbContext(typeof(InternalDbContext))]
    partial class InternalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pallet.InternalDatabase.Entities.Log.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDR");

                    b.Property<string>("DescriptionDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIMESTAMP");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VAL");

                    b.HasKey("ID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Pallet.InternalDatabase.Entities.Log.SystemEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DescriptionDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("ID");

                    b.ToTable("SYSEVENT");
                });

            modelBuilder.Entity("Pallet.InternalDatabase.Entities.OPC.Alarm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ALM_ADDRESS");

                    b.Property<string>("DescriptionDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<bool>("Inverted")
                        .HasColumnType("bit")
                        .HasColumnName("INVERTED");

                    b.Property<int>("NR")
                        .HasColumnType("int")
                        .HasColumnName("ALM_NR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ALM_NAME");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("PRIO");

                    b.Property<string>("StopType")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("STYPE");

                    b.HasKey("ID");

                    b.ToTable("ALARM_DEF");
                });

            modelBuilder.Entity("Pallet.InternalDatabase.Entities.OPC.AlarmLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ALM_ADDRESS");

                    b.Property<string>("DescriptionDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT1");

                    b.Property<string>("DescriptionLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEXT3");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<bool>("Gone")
                        .HasColumnType("bit")
                        .HasColumnName("GONE");

                    b.Property<bool>("Inverted")
                        .HasColumnType("bit")
                        .HasColumnName("INVERTED");

                    b.Property<int>("NR")
                        .HasColumnType("int")
                        .HasColumnName("ALM_NR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ALM_NAME");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("PRIO");

                    b.Property<string>("StopType")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("STYPE");

                    b.Property<DateTime?>("TimestampEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIMESTAMP2");

                    b.Property<DateTime>("TimestampStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIMESTAMP1");

                    b.HasKey("ID");

                    b.ToTable("ALARM_LOG");
                });

            modelBuilder.Entity("Pallet.InternalDatabase.Entities.OPC.Signal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SIG_ADDRESS");

                    b.Property<string>("DescriptionDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC1");

                    b.Property<string>("DescriptionLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESC3");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DEVICE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SIG_NAME");

                    b.HasKey("ID");

                    b.ToTable("SIGNALS_DEF");
                });

            modelBuilder.Entity("Pallet.InternalDatabase.Entities.Users.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("AdminRegisteredName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin registered");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("USER_DESC");

                    b.Property<string>("Hashcode")
                        .IsRequired()
                        .HasColumnType("char(64)")
                        .HasColumnName("USER_HASH");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USER_NAME")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("RegistrationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Registration Date");

                    b.Property<int>("RoleNum")
                        .HasColumnType("int")
                        .HasColumnName("USER_ROLE");

                    b.HasKey("ID");

                    b.ToTable("PROG_USER");
                });
#pragma warning restore 612, 618
        }
    }
}
