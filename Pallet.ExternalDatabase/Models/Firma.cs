// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Pallet.BaseDatabase.Base;
using Microsoft.EntityFrameworkCore;

namespace Pallet.ExternalDatabase.Models;

/// <summary>
/// Speichert die Firmen
/// Saves the companies
/// </summary>
[Table("t_firma")]
//[Index("NStatusId", "DGeloescht", Name = "IDX_STATUS")]
//[Index("Firmakey", "Kundekrz", Name = "idx_firma_kurz")]
//[Index("Firma", "Plz", Name = "idx_firma_plz")]
//[Index("Kundekrz", "Plz", Name = "idx_kundekrz_plz")]
public partial class Firma
{
    [Key]
    [Column("firmakey")]
    public  int Firmakey { get; set; }
    [Column("firma")]
    [StringLength(70)]
    public string Name { get; set; }
    [Column("plz")]
    [StringLength(15)]
    public string Plz { get; set; }
    [Column("strassennr")]
    [StringLength(20)]
    public string Strassennr { get; set; }
    [Column("strasse")]
    [StringLength(40)]
    public string Strasse { get; set; }
    [Column("ort")]
    [StringLength(40)]
    public string Ort { get; set; }
    [Column("bemerkung", TypeName = "mediumtext")]
    public string Bemerkung { get; set; }
    [Column("land")]
    [StringLength(40)]
    public string Land { get; set; }
    [Column("telefon")]
    [StringLength(20)]
    public string Telefon { get; set; }
    [Column("email")]
    [StringLength(50)]
    public string Email { get; set; }
    [Column("ansprechpartner")]
    [StringLength(50)]
    public string Ansprechpartner { get; set; }
    [Column("branche")]
    [StringLength(140)]
    public string Branche { get; set; }
    [Column("fax")]
    [StringLength(20)]
    public string Fax { get; set; }
    [Column("internet")]
    [StringLength(50)]
    public string Internet { get; set; }
    [Column("postfach")]
    [StringLength(50)]
    public string Postfach { get; set; }
    [Column("plzpostfach")]
    [StringLength(15)]
    public string Plzpostfach { get; set; }
    [Column("staat")]
    [StringLength(40)]
    public string Staat { get; set; }
    [Column("kundekrz")]
    [StringLength(25)]

    ///client 
    public string Kundekrz { get; set; }
    [Column("kundenr")]
    [StringLength(15)]
    public string Kundenr { get; set; }
    [Column("nottelefon")]
    [StringLength(20)]
    public string Nottelefon { get; set; }
    [Column("bem_material", TypeName = "mediumtext")]
    public string BemMaterial { get; set; }
    [Column("bem_gefahr", TypeName = "mediumtext")]
    public string BemGefahr { get; set; }
    [Column("staatid")]
    public int? Staatid { get; set; }
    [Column("logo")]
    public byte[] Logo { get; set; }
    [Column("d_geloescht", TypeName = "datetime")]
    public DateTime? DGeloescht { get; set; }
    [Column("n_geloescht_von")]
    public int? NGeloeschtVon { get; set; }
    [Column("n_zahlungsbed")]
    public short? NZahlungsbed { get; set; }
    [Column("n_skonto")]
    [Precision(5, 2)]
    public decimal NSkonto { get; set; }
    [Column("n_skonto_zahlbar_tage")]
    public int NSkontoZahlbarTage { get; set; }
    [Column("n_netto_zahlbar_tage")]
    public int NNettoZahlbarTage { get; set; }
    [Column("n_karenzzeit")]
    public int NKarenzzeit { get; set; }
    /// <summary>
    /// 0=nicht runden, 1=Runden, -1=Abrunden, 2=Aufrunden
    /// 0=do not round, 1=round, -1=round down, 2=round up
    /// </summary>
    [Column("n_betrag_runden")]
    public short NBetragRunden { get; set; }
    [Column("c_ust_id")]
    [StringLength(25)]
    public string CUstId { get; set; }
    [Required]
    [Column("n_mahnung_erlaubt")]
    public bool? NMahnungErlaubt { get; set; }
    [Column("n_mahnung_1")]
    public int NMahnung1 { get; set; }
    [Column("n_mahnung_2")]
    public int NMahnung2 { get; set; }
    [Column("n_mahnung_3")]
    public int NMahnung3 { get; set; }
    [Column("c_rech_email")]
    [StringLength(100)]
    public string CRechEmail { get; set; }
    [Column("c_rech_email_betreff")]
    [StringLength(100)]
    public string CRechEmailBetreff { get; set; }
    [Column("c_ab_email")]
    [StringLength(100)]
    public string CAbEmail { get; set; }
    [Column("c_ab_email_text", TypeName = "text")]
    public string CAbEmailText { get; set; }
    [Column("c_ab_email_betreff")]
    [StringLength(100)]
    public string CAbEmailBetreff { get; set; }
    [Column("c_rech_email_text", TypeName = "text")]
    public string CRechEmailText { get; set; }
    /// <summary>
    /// Ueberstand bei QK
    /// Survival at QK
    /// </summary>
    [Column("n_v_qk_ueber")]
    public int NVQkUeber { get; set; }
    [Column("m_verp_bem_beiblatt", TypeName = "text")]
    public string MVerpBemBeiblatt { get; set; }
    [Column("n_verp_plattenwerkstoff_id")]
    public int? NVerpPlattenwerkstoffId { get; set; }
    [Column("m_allg_anweiunsgen", TypeName = "text")]
    public string MAllgAnweiunsgen { get; set; }
    /// <summary>
    /// Beipackhölzer für diesen Kunden nicht löschen, wenn sich bei der Verpackung Dimensionen ändern.
    /// Do not delete the loose wood for this customer if the dimensions of the packaging change.
    /// </summary>
    [Column("n_beipackh_nicht_loeschen")]
    public bool? NBeipackhNichtLoeschen { get; set; }
    /// <summary>
    /// Die Kalkulation wird über die Rasterkalkulation durchgeführt.
    /// The calculation is carried out using the grid calculation.
    /// </summary>
    [Column("n_kalkl_nach_rasterpreis")]
    public bool? NKalklNachRasterpreis { get; set; }
    [Column("d_geaendert", TypeName = "datetime")]
    public DateTime? DGeaendert { get; set; }
    [Column("c_konto_nr")]
    [StringLength(35)]
    public string CKontoNr { get; set; }
    /// <summary>
    /// kat_grp = 40
    /// </summary>
    [Column("n_status_id")]
    public int? NStatusId { get; set; }
    [Column("c_erstkontakt")]
    [StringLength(50)]
    public string CErstkontakt { get; set; }
    /// <summary>
    /// Wird für die Neukundenentwicklung benutzt.
    /// Used for new customer development.
    /// </summary>
    [Column("d_erstkontakt", TypeName = "datetime")]
    public DateTime? DErstkontakt { get; set; }
    /// <summary>
    /// Wird für die Neukundenentwicklung benutzt.kat_grp = 41
    /// Used for new customer development.
    /// 
    /// </summary>
    [Column("n_potenzial_id")]
    public int? NPotenzialId { get; set; }
    [Column("m_ergebnis", TypeName = "mediumtext")]
    public string MErgebnis { get; set; }
    [Column("n_ansprechpartner_id")]
    public int? NAnsprechpartnerId { get; set; }
    [Column("c_namen_zusatz")]
    [StringLength(45)]
    public string CNamenZusatz { get; set; }
    /// <summary>
    /// kat_grp=110
    /// </summary>
    [Column("n_subtype_id")]
    public int? NSubtypeId { get; set; }
    /// <summary>
    /// use for telefon book
    /// </summary>
    [Column("n_add_telefon")]
    public bool? NAddTelefon { get; set; }
    /// <summary>
    /// kat_grp=29
    /// </summary>
    [Column("n_bev_zahlungsart_id")]
    public int? NBevZahlungsartId { get; set; }
    [Column("c_ftp_subdir")]
    [StringLength(50)]
    public string CFtpSubdir { get; set; }
    [Column("n_print_rech_briefkopf")]
    public bool? NPrintRechBriefkopf { get; set; }
    /// <summary>
    /// Entfernung zum Kunden. Was in Verbindung mit dem ausgewählten Fahrzeug und den anfallen Kosten pro KM die Kosten in der Nachkalkulation ergibt.
    /// distance to the customer. Which, in connection with the selected vehicle and the costs incurred per KM, results in the costs in the post-calculation.
    /// </summary>
    [Column("n_logi_entfernung_1")]
    public int? NLogiEntfernung1 { get; set; }
    /// <summary>
    /// Wird für die Neukundenentwicklung benutzt.
    /// Used for new customer development.
    /// </summary>
    [Column("d_letzter_kontakt")]
    public DateOnly? DLetzterKontakt { get; set; }
    /// <summary>
    /// Kennzeichen ob Inhalt bei Rechnung gedruckt werden soll.
    /// Indicates whether the content should be printed on the invoice.
    /// </summary>
    [Column("n_print_rech_verp_inhalt")]
    public bool? NPrintRechVerpInhalt { get; set; }
    [Column("n_print_adr_in_rechnung")]
    public bool? NPrintAdrInRechnung { get; set; }
    [Column("n_deaktiviert")]
    public bool? NDeaktiviert { get; set; }
}