// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Pallet.ExternalDatabase.Models
{
    /// <summary>
    /// Speichert alle Kisten und Verschläge mit allen Ausprägung
    /// Saves all crates and crates with all characteristics
    /// </summary>
    [Table("t_verpackung")]
    //[Index("NFremdVerpfirmaId", "VerpId", "VerpTyp", Name = "IDX_FREMD_VERPACKUNG")]
    //[Index("VerpAuftragId", Name = "IDX_VERP_AUFTAG_ID")]
    //[Index("VerpId", "VerpTyp", "VerpDeleted", "VerpNr", "VerpKundeId", "VerpPrjId", "VerpAuftragId", "VerpAktiv", "VerpSeem", "VerpVerpacken", "VerpGedruckt", "VerpAnfragePreis", "VerpAnzahl", "VerpMattypId", Name = "IDX_VERP_NO_REF")]
    //[Index("VerpId", "VerpTyp", "VerpDeleted", "VerpNr", "VerpKundeId", "VerpHolzbehandlungId", "VerpPrjId", "VerpAuftragId", "VerpLandId", "VerpAktiv", "VerpKalenderId", "VerpMattypId", "VerpSeem", "VerpVerpacken", "VerpGedruckt", "VerpAnfragePreis", Name = "IDX_VERP_TYP_DELETED")]
    //[Index("VerpTyp", "VerpName", "VerpDeleted", Name = "IDX_VERP_TYP_DELETED_S")]
    //[Index("VerpKundeId", "VerpTyp", "VerpName", Name = "IDX_VNAME_KUNDE_TYP")]
    public partial class Verpackung
    {
        [Key]
        [Column("verp_id")]
        public int VeprId { get; set; }
        [Column("verp_typ")]
        public int VerpTyp { get; set; }
        [Column("verp_kunde_id")]
        public int VerpKundeId { get; set; }
        [Column("verp_prj_id")]
        public int? VerpPrjId { get; set; }
        /// <summary>
        /// ist NULL wenn template
        /// </summary>
        [Column("verp_nr")]
        [StringLength(50)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpNr { get; set; }
        [Column("verp_innenmass")]
        public bool? VerpInnenmass { get; set; }
        [Column("verp_aussenmass")]
        public bool? VerpAussenmass { get; set; }
        [Column("verp_laenge")]
        public int? VerpLaenge { get; set; }
        /// <summary>
        /// laenge nicht zusammengebaut
        /// </summary>
        [Column("n_laenge_bausatz")]
        public ushort? NLaengeBausatz { get; set; }
        /// <summary>
        /// Daten im Maschinenmass eingegeben
        /// </summary>
        [Column("n_maschinen_mass")]
        public bool? NMaschinenMass { get; set; }
        [Column("verp_laenge_i")]
        public bool? VerpLaengeI { get; set; }
        [Column("verp_laenge_a")]
        public bool? VerpLaengeA { get; set; }
        [Column("verp_breite")]
        public int? VerpBreite { get; set; }
        /// <summary>
        /// breite nicht zusammengebaut
        /// </summary>
        [Column("n_breite_bausatz")]
        public ushort? NBreiteBausatz { get; set; }
        [Column("verp_breite_i")]
        public bool? VerpBreiteI { get; set; }
        [Column("verp_breite_a")]
        public bool? VerpBreiteA { get; set; }
        [Column("verp_hoehe")]
        public int? VerpHoehe { get; set; }
        /// <summary>
        /// hoehe nicht zusammengebaut
        /// </summary>
        [Column("n_hoehe_bausatz")]
        public ushort? NHoeheBausatz { get; set; }
        [Column("verp_hoehe_i")]
        public bool? VerpHoeheI { get; set; }
        [Column("verp_hoehe_a")]
        public bool? VerpHoeheA { get; set; }
        [Column("verp_statik")]
        public bool? VerpStatik { get; set; }
        [Column("verp_st_schnittholzboden")]
        public sbyte? VerpStSchnittholzboden { get; set; }
        [Column("verp_st_doppelterboden")]
        public sbyte? VerpStDoppelterboden { get; set; }
        [Column("verp_st_doppelterkopf")]
        public bool? VerpStDoppelterkopf { get; set; }
        [Column("verp_lk1")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpLk1 { get; set; }
        [Column("verp_lk1_anz")]
        public int? VerpLk1Anz { get; set; }
        [Column("verp_lk1_hk")]
        public int? VerpLk1Hk { get; set; }
        [Column("verp_lk1_fl")]
        public int? VerpLk1Fl { get; set; }
        [Column("verp_lk2")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpLk2 { get; set; }
        [Column("verp_lk2_anz")]
        public int? VerpLk2Anz { get; set; }
        [Column("verp_lk2_hk")]
        public int? VerpLk2Hk { get; set; }
        [Column("verp_lk2_fl")]
        public int? VerpLk2Fl { get; set; }
        [Column("n_lk_ueberstand")]
        public int? NLkUeberstand { get; set; }
        [Column("n_lk_is_kvh")]
        public bool? NLkIsKvh { get; set; }
        [Column("c_bodenramhen")]
        [StringLength(10)]
        public string CBodenramhen { get; set; }
        [Column("n_bodenramhen_hk")]
        public bool? NBodenramhenHk { get; set; }
        [Column("n_bodenramhen_innen_liegend")]
        public bool? NBodenramhenInnenLiegend { get; set; }
        [Column("n_bodenramhen_fl")]
        public bool? NBodenramhenFl { get; set; }
        [Column("verp_qk1")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpQk1 { get; set; }
        [Column("verp_qk1_anz")]
        public int? VerpQk1Anz { get; set; }
        [Column("verp_qk1_hk")]
        public int? VerpQk1Hk { get; set; }
        [Column("verp_qk1_fl")]
        public int? VerpQk1Fl { get; set; }
        [Column("verp_qk2")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpQk2 { get; set; }
        [Column("verp_qk2_anz")]
        public int? VerpQk2Anz { get; set; }
        [Column("verp_qk2_hk")]
        public int? VerpQk2Hk { get; set; }
        [Column("verp_qk2_fl")]
        public int? VerpQk2Fl { get; set; }
        /// <summary>
        /// Benutzer Qk Laenge
        /// </summary>
        [Column("n_qk_laenge")]
        public int? NQkLaenge { get; set; }
        /// <summary>
        /// Querkufen mit Nut
        /// </summary>
        [Column("n_qk_nut")]
        public bool? NQkNut { get; set; }
        [Column("n_mit_pe_auskleiden")]
        public bool? NMitPeAuskleiden { get; set; }
        /// <summary>
        /// PE-Folie unter den Deckel
        /// </summary>
        [Column("n_pe_unter_deckel")]
        public bool? NPeUnterDeckel { get; set; }
        [Column("n_korrschutz_beilegen")]
        public bool? NKorrschutzBeilegen { get; set; }
        [Column("n_qk_is_kvh")]
        public bool? NQkIsKvh { get; set; }
        [Column("verp_sb1")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpSb1 { get; set; }
        [Column("verp_sb1_anz")]
        public int? VerpSb1Anz { get; set; }
        [Column("verp_gk1")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpGk1 { get; set; }
        [Column("verp_gk1_anz")]
        public int? VerpGk1Anz { get; set; }
        [Column("verp_gk1_hk")]
        public int? VerpGk1Hk { get; set; }
        [Column("verp_gk1_fl")]
        public int? VerpGk1Fl { get; set; }
        [Column("verp_gk2")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpGk2 { get; set; }
        [Column("verp_gk2_anz")]
        public int? VerpGk2Anz { get; set; }
        [Column("verp_gk2_hk")]
        public int? VerpGk2Hk { get; set; }
        [Column("verp_gk2_fl")]
        public int? VerpGk2Fl { get; set; }
        [Column("verp_gk_laenge")]
        public int? VerpGkLaenge { get; set; }
        [Column("verp_bh")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpBh { get; set; }
        /// <summary>
        /// Ringmutter für BH
        /// </summary>
        [Column("verp_bh_ringmutter")]
        public bool? VerpBhRingmutter { get; set; }
        [Column("verp_4wege_checked")]
        public bool? Verp4wegeChecked { get; set; }
        [Column("verp_4wege_bl_breite")]
        public int? Verp4wegeBlBreite { get; set; }
        [Column("verp_4wege_bl_hoehe")]
        public int? Verp4wegeBlHoehe { get; set; }
        [Column("verp_4wege_bl_anzahl")]
        public int? Verp4wegeBlAnzahl { get; set; }
        [Column("verp_4wege_bl_laenge")]
        public int? Verp4wegeBlLaenge { get; set; }
        [Column("verp_4wege_bl_gedreht")]
        public bool? Verp4wegeBlGedreht { get; set; }
        [Column("verp_4wege_zl_breite")]
        public int? Verp4wegeZlBreite { get; set; }
        [Column("verp_4wege_zl_hoehe")]
        public int? Verp4wegeZlHoehe { get; set; }
        [Column("verp_4wege_zl_anzahl")]
        public int? Verp4wegeZlAnzahl { get; set; }
        [Column("verp_4wege_zl_laenge")]
        public int? Verp4wegeZlLaenge { get; set; }
        [Column("verp_4wege_dl_breite")]
        public int? Verp4wegeDlBreite { get; set; }
        [Column("verp_4wege_dl_laenge")]
        public int? Verp4wegeDlLaenge { get; set; }
        [Column("verp_4wege_dl_aufgelegt")]
        public int? Verp4wegeDlAufgelegt { get; set; }
        [Column("verp_4wege_dl_hoehe")]
        public int? Verp4wegeDlHoehe { get; set; }
        [Column("verp_4wege_klotz_laenge")]
        public int? Verp4wegeKlotzLaenge { get; set; }
        [Column("verp_4wege_klotz_breite")]
        public int? Verp4wegeKlotzBreite { get; set; }
        [Column("verp_4wege_klotz_hoehe")]
        public int? Verp4wegeKlotzHoehe { get; set; }
        [Column("verp_4wege_klotz_anzahl")]
        public int? Verp4wegeKlotzAnzahl { get; set; }
        [Column("verp_tellerkopf_schraube")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpTellerkopfSchraube { get; set; }
        [Column("verp_tellerkopf_schraube_laenge")]
        public int? VerpTellerkopfSchraubeLaenge { get; set; }
        [Column("verp_bh_berueck")]
        public bool? VerpBhBerueck { get; set; }
        [Column("verp_bh_unten")]
        public bool? VerpBhUnten { get; set; }
        [Column("verp_bh_hk")]
        public int? VerpBhHk { get; set; }
        [Column("verp_bh_fl")]
        public int? VerpBhFl { get; set; }
        [Column("verp_rh_dim")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpRhDim { get; set; }
        [Column("verp_rh_hk")]
        public int? VerpRhHk { get; set; }
        [Column("verp_rh_fl")]
        public int? VerpRhFl { get; set; }
        [Column("verp_mini_rh")]
        public int? VerpMiniRh { get; set; }
        [Column("verp_nagelholz")]
        public int? VerpNagelholz { get; set; }
        [Column("verp_mini_ohne")]
        public int? VerpMiniOhne { get; set; }
        [Column("verp_mini_rh_anz")]
        public int? VerpMiniRhAnz { get; set; }
        [Column("verp_mini_hk")]
        public int? VerpMiniHk { get; set; }
        [Column("verp_mini_fl")]
        public int? VerpMiniFl { get; set; }
        [Column("verp_st_alle_cb")]
        public bool? VerpStAlleCb { get; set; }
        [Column("verp_st_alle")]
        public float? VerpStAlle { get; set; }
        [Column("verp_st_k")]
        public float? VerpStK { get; set; }
        [Column("verp_st_d")]
        public float? VerpStD { get; set; }
        [Column("verp_st_s")]
        public float? VerpStS { get; set; }
        [Column("verp_st_b")]
        public float? VerpStB { get; set; }
        [Column("verp_vb_all")]
        public float? VerpVbAll { get; set; }
        [Column("verp_vb_all_cb")]
        public bool? VerpVbAllCb { get; set; }
        [Column("verp_vb_k")]
        public float? VerpVbK { get; set; }
        [Column("verp_vb_d")]
        public float? VerpVbD { get; set; }
        [Column("verp_vb_s")]
        public float? VerpVbS { get; set; }
        [Column("verp_vb_b")]
        public float? VerpVbB { get; set; }
        [Column("verp_lst_alle_cb")]
        public bool? VerpLstAlleCb { get; set; }
        [Column("verp_lst_alle")]
        public float? VerpLstAlle { get; set; }
        [Column("verp_lst_k")]
        public float? VerpLstK { get; set; }
        [Column("verp_lst_d")]
        public float? VerpLstD { get; set; }
        [Column("verp_lst_s")]
        public float? VerpLstS { get; set; }
        [Column("verp_lst_b")]
        public float? VerpLstB { get; set; }
        [Column("verp_lb_alle_cb")]
        public bool? VerpLbAlleCb { get; set; }
        [Column("verp_lb_alle")]
        public float? VerpLbAlle { get; set; }
        [Column("verp_lb_k")]
        public float? VerpLbK { get; set; }
        [Column("verp_lb_d")]
        public float? VerpLbD { get; set; }
        [Column("verp_lb_s")]
        public float? VerpLbS { get; set; }
        [Column("verp_lb_b")]
        public float? VerpLbB { get; set; }
        [Column("verp_dh_last")]
        public int? VerpDhLast { get; set; }
        [Column("verp_dh_anzahl")]
        public int? VerpDhAnzahl { get; set; }
        [Column("verp_dh_dim")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpDhDim { get; set; }
        [Column("verp_dh_hk")]
        public bool VerpDhHk { get; set; }
        [Column("verp_dh_fl")]
        public bool VerpDhFl { get; set; }
        [Column("verp_steher_anz")]
        public int? VerpSteherAnz { get; set; }
        [Column("verp_steher_dim")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpSteherDim { get; set; }
        [Column("verp_ecksteher_dim")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpEcksteherDim { get; set; }
        [Column("verp_strecker_dim")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpStreckerDim { get; set; }
        [Column("verp_bh_dopp")]
        public int? VerpBhDopp { get; set; }
        [Column("verp_b_bem", TypeName = "mediumtext")]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpBBem { get; set; }
        [Column("verp_k_bem", TypeName = "mediumtext")]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpKBem { get; set; }
        [Column("verp_d_bem", TypeName = "mediumtext")]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpDBem { get; set; }
        [Column("verp_s_bem", TypeName = "mediumtext")]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpSBem { get; set; }
        [Column("verp_qk_lose")]
        public int? VerpQkLose { get; set; }
        [Column("verp_qk_kopf_a")]
        public int? VerpQkKopfA { get; set; }
        [Column("verp_qk_kopf_b")]
        public int? VerpQkKopfB { get; set; }
        [Column("verp_schraube")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpSchraube { get; set; }
        [Column("verp_schraube_mm")]
        public int? VerpSchraubeMm { get; set; }
        /// <summary>
        /// Schlossschrauben fuer Lk-QK Verbindung
        /// Carriage bolts for Lk-QK connection
        /// </summary>
        [Column("c_schraube_lkqk")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CSchraubeLkqk { get; set; }
        /// <summary>
        /// Ringmutter für LK-QK
        /// Ring nut for LK-QK
        /// </summary>
        [Column("n_lkqk_ringmutter")]
        public bool? NLkqkRingmutter { get; set; }
        /// <summary>
        /// Schlossschraubenlaenge fuer Lk-QK Verbindung
        /// Carriage bolt length for Lk-QK connection
        /// </summary>
        [Column("n_schraube_mm_lkqk")]
        public int? NSchraubeMmLkqk { get; set; }
        /// <summary>
        /// Lk-QK Schrauben nur in auessere QK
        /// Lk-QK screws only in outer QK
        /// </summary>
        [Column("n_schraube_mm_lkqk_aussen_qk")]
        public bool? NSchraubeMmLkqkAussenQk { get; set; }
        [Column("verp_naegel")]
        public int? VerpNaegel { get; set; }
        [Column("verp_created", TypeName = "datetime")]
        public DateTime VerpCreated { get; set; }
        [Column("verp_datum", TypeName = "datetime")]
        public DateTime? VerpDatum { get; set; }
        [Column("verp_termin", TypeName = "datetime")]
        public DateTime? VerpTermin { get; set; }
        [Column("verp_boden_konstr")]
        public int? VerpBodenKonstr { get; set; }
        [Column("verp_info", TypeName = "mediumtext")]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpInfo { get; set; }
        [Column("verp_dh")]
        public bool? VerpDh { get; set; }
        [Column("verp_auftrag_id")]
        public int? VerpAuftragId { get; set; }
        [Column("verp_drainage")]
        public bool? VerpDrainage { get; set; }
        [Column("verp_akylux")]
        public bool? VerpAkylux { get; set; }
        [Column("verp_nur_sp")]
        public bool? VerpNurSp { get; set; }
        [Column("verp_mit_papier")]
        public bool? VerpMitPapier { get; set; }
        [Column("verp_mit_oelpapier")]
        public bool? VerpMitOelpapier { get; set; }
        [Column("verp_zn")]
        public bool? VerpZn { get; set; }
        [Column("verp_seem")]
        public bool? VerpSeem { get; set; }
        [Column("verp_verpacken")]
        public bool? VerpVerpacken { get; set; }
        [Column("verp_schrumpfhaube")]
        public bool? VerpSchrumpfhaube { get; set; }
        [Column("n_schrumpfen_komplett")]
        public bool? NSchrumpfenKomplett { get; set; }
        [Column("n_deckel_haube")]
        public bool? NDeckelHaube { get; set; }
        [Column("verp_folienhaube")]
        public bool VerpFolienhaube { get; set; }
        [Column("verp_ohnefolienhaube")]
        public bool VerpOhnefolienhaube { get; set; }
        [Column("verp_kl_unten_ueberstehen")]
        public bool? VerpKlUntenUeberstehen { get; set; }
        [Column("verp_bbretter_seitlich_einrueck")]
        public bool? VerpBbretterSeitlichEinrueck { get; set; }
        [Column("verp_holzbehandlung_id")]
        public int? VerpHolzbehandlungId { get; set; }
        [Column("verp_name")]
        [StringLength(25)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpName { get; set; }
        [Column("verp_diagonale_kopf")]
        public bool? VerpDiagonaleKopf { get; set; }
        [Column("verp_diagonale_seite")]
        public bool? VerpDiagonaleSeite { get; set; }
        [Column("verp_kupplung_seite_anz")]
        public sbyte? VerpKupplungSeiteAnz { get; set; }
        [Column("verp_kupplung_seite_ohne")]
        public bool? VerpKupplungSeiteOhne { get; set; }
        [Column("verp_kupplung_deckel_anz")]
        public sbyte? VerpKupplungDeckelAnz { get; set; }
        [Column("verp_kupplung_deckel_ohne")]
        public bool? VerpKupplungDeckelOhne { get; set; }
        /// <summary>
        /// Leisten Innen (Leichtkiste)
        /// Strips inside (light box)
        /// </summary>
        [Column("verp_li")]
        public bool? VerpLi { get; set; }
        /// <summary>
        /// Leisten Aussen (Leichtkiste)
        /// Outside moldings(light box)
        /// </summary>
        [Column("verp_la")]
        public bool? VerpLa { get; set; }
        [Column("verp_li_lakoepfe")]
        public bool? VerpLiLakoepfe { get; set; }
        [Column("verp_ohne_zl")]
        public bool? VerpOhneZl { get; set; }
        [Column("verp_ohne_sl")]
        public bool? VerpOhneSl { get; set; }
        [Column("verp_ohne_kl")]
        public bool? VerpOhneKl { get; set; }
        [Column("verp_ohne_dl")]
        public bool? VerpOhneDl { get; set; }
        [Column("verp_anzahl")]
        public int? VerpAnzahl { get; set; }
        [Column("verp_ref_verp_auftrag_id")]
        public int? VerpRefVerpAuftragId { get; set; }
        [Column("verp_ref_verp_typ_id")]
        public int? VerpRefVerpTypId { get; set; }
        [Column("verp_ref_verp_id")]
        public int? VerpRefVerpId { get; set; }
        [Column("verp_kalender_id")]
        [StringLength(45)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpKalenderId { get; set; }
        /// <summary>
        /// Kleinkiste
        /// </summary>
        [Column("verp_einwandig")]
        public bool? VerpEinwandig { get; set; }
        /// <summary>
        /// Kleinkiste
        /// </summary>
        [Column("verp_doppelwandig")]
        public bool? VerpDoppelwandig { get; set; }
        [Column("n_kstr_eingelegter_boden")]
        public bool? NKstrEingelegterBoden { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_femdboden_laenge")]
        public int? VerpFemdbodenLaenge { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_fremdboden_breite")]
        public int? VerpFremdbodenBreite { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_fremdboden_hoehe")]
        public int? VerpFremdbodenHoehe { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_fremdboden_gewicht")]
        public int? VerpFremdbodenGewicht { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_fremdboden_stuelpmass")]
        public int? VerpFremdbodenStuelpmass { get; set; }
        [Column("verp_fremdboden_stuelpmass_kopf")]
        public int? VerpFremdbodenStuelpmassKopf { get; set; }
        [Column("verp_fremdboden_stuelpmass_seite")]
        public int? VerpFremdbodenStuelpmassSeite { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_fremdboden")]
        public bool? VerpFremdboden { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_ohne_eigenen_boden")]
        public bool? VerpOhneEigenenBoden { get; set; }
        /// <summary>
        /// Stuelpkiste
        /// </summary>
        [Column("verp_lb_palettenmass")]
        public bool? VerpLbPalettenmass { get; set; }
        [Column("verp_deleted", TypeName = "datetime")]
        public DateTime? VerpDeleted { get; set; }
        [Required]
        [Column("verp_aktiv")]
        public bool? VerpAktiv { get; set; }
        [Column("verp_mattyp_id")]
        public int? VerpMattypId { get; set; }
        /// <summary>
        /// t_plattenwerkstoffe
        /// </summary>
        [Column("n_plattenwerkstoff_id")]
        public int? NPlattenwerkstoffId { get; set; }
        /// <summary>
        /// Verschlag alle gleich
        /// </summary>
        [Column("verp_bel_alle_gleich")]
        public bool? VerpBelAlleGleich { get; set; }
        /// <summary>
        /// Verschlag ungleich
        /// </summary>
        [Column("verp_bel_ungleich")]
        public bool? VerpBelUngleich { get; set; }
        /// <summary>
        /// Verschlag Belegung in Prozent
        /// </summary>
        [Column("verp_bel_alle")]
        public int? VerpBelAlle { get; set; }
        /// <summary>
        /// Verschlag Belegund Koepfe
        /// </summary>
        [Column("verp_bel_koepfe")]
        public int? VerpBelKoepfe { get; set; }
        /// <summary>
        /// Verschlag Belegung Seiten
        /// </summary>
        [Column("verp_bel_seiten")]
        public int? VerpBelSeiten { get; set; }
        /// <summary>
        /// Verschlag Belegung Deckel
        /// </summary>
        [Column("verp_bel_deckel")]
        public int? VerpBelDeckel { get; set; }
        /// <summary>
        /// Verschlag Belegung Boden
        /// </summary>
        [Column("verp_bel_boden")]
        public int? VerpBelBoden { get; set; }
        [Column("verp_bel_luecke_karton")]
        public bool? VerpBelLueckeKarton { get; set; }
        [Column("verp_bh_anz")]
        public int? VerpBhAnz { get; set; }
        [Column("verp_baufeld")]
        [StringLength(50)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpBaufeld { get; set; }
        [Column("verp_land_id")]
        public int? VerpLandId { get; set; }
        [Column("verp_kunden_auftragsnr")]
        [StringLength(25)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpKundenAuftragsnr { get; set; }
        [Column("verp_position")]
        [StringLength(60)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpPosition { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettbreite
        /// </summary>
        [Column("verp_bb_alle_cb")]
        public bool? VerpBbAlleCb { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettbreite
        /// </summary>
        [Column("verp_bb_alle")]
        public int? VerpBbAlle { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettbreite
        /// </summary>
        [Column("verp_bb_k")]
        public int? VerpBbK { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettbreite
        /// </summary>
        [Column("verp_bb_s")]
        public int? VerpBbS { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettbreite
        /// </summary>
        [Column("verp_bb_d")]
        public int? VerpBbD { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettbreite
        /// </summary>
        [Column("verp_bb_b")]
        public int? VerpBbB { get; set; }
        /// <summary>
        /// Waag. Sparverschlag max Lueckenbreite
        /// </summary>
        [Column("verp_max_lueckenb_cb")]
        public bool? VerpMaxLueckenbCb { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Brettanzahl
        /// </summary>
        [Column("verp_brettanzahl_cb")]
        public bool? VerpBrettanzahlCb { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Anzahl/Lueckenb
        /// </summary>
        [Column("verp_lueckenb_alle_cb")]
        public bool? VerpLueckenbAlleCb { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Anzahl/Lueckenb
        /// </summary>
        [Column("verp_lueckenb_alle")]
        public int? VerpLueckenbAlle { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Anzahl/Lueckenb
        /// </summary>
        [Column("verp_lueckenb_k")]
        public int? VerpLueckenbK { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Anzahl/Lueckenb
        /// </summary>
        [Column("verp_lueckenb_s")]
        public int? VerpLueckenbS { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Anzahl/Lueckenb
        /// </summary>
        [Column("verp_lueckenb_d")]
        public int? VerpLueckenbD { get; set; }
        /// <summary>
        /// Waag. Sparverschlag Anzahl/Lueckenb
        /// </summary>
        [Column("verp_lueckenb_b")]
        public int? VerpLueckenbB { get; set; }
        [Column("verp_anzahl_geliefert")]
        public int? VerpAnzahlGeliefert { get; set; }
        [Column("verp_anzahl_verrechnet")]
        public int VerpAnzahlVerrechnet { get; set; }
        [Column("verp_anzahl_nicht_verrechenbar")]
        public int VerpAnzahlNichtVerrechenbar { get; set; }
        [Column("verp_anzahl_transportiert")]
        public int? VerpAnzahlTransportiert { get; set; }
        [Column("verp_anzahl_auftragbestaet")]
        public int VerpAnzahlAuftragbestaet { get; set; }
        [Column("verp_anzahl_angeboten")]
        public int VerpAnzahlAngeboten { get; set; }
        [Column("verp_anzahl_verplant")]
        public int VerpAnzahlVerplant { get; set; }
        [Column("verp_gedruckt")]
        public short VerpGedruckt { get; set; }
        [Column("verp_statik_kranpos_1")]
        public int? VerpStatikKranpos1 { get; set; }
        [Column("verp_statik_kranpos_2")]
        public int? VerpStatikKranpos2 { get; set; }
        /// <summary>
        /// t_statik_material.n_id
        /// </summary>
        [Column("n_statik_stahl_id")]
        public int? NStatikStahlId { get; set; }
        [Column("verp_statik_max_bodenstaerke")]
        public int? VerpStatikMaxBodenstaerke { get; set; }
        [Column("verp_statik_gabelbreite")]
        public int? VerpStatikGabelbreite { get; set; }
        [Column("verp_statik_stuetzfl_ueberlappen")]
        public bool? VerpStatikStuetzflUeberlappen { get; set; }
        [Column("verp_statik_bohrholz_ueberlappen")]
        public bool? VerpStatikBohrholzUeberlappen { get; set; }
        [Column("verp_anfrage_preis")]
        [Precision(19, 4)]
        public decimal? VerpAnfragePreis { get; set; }
        [Column("n_rabatt")]
        public float? NRabatt { get; set; }
        /// <summary>
        /// Qubikmeter aller Schnitthoelzer
        /// </summary>
        [Column("verp_schnittholz_m3")]
        [Precision(19, 4)]
        public decimal VerpSchnittholzM3 { get; set; }
        /// <summary>
        /// Qubikmeter aller Plattenwerkstoffe
        /// </summary>
        [Column("verp_platten_m3")]
        [Precision(19, 4)]
        public decimal VerpPlattenM3 { get; set; }
        /// <summary>
        /// Quadratmeter aller Plattenwerkstoffe
        /// </summary>
        [Column("verp_platten_m2")]
        [Precision(19, 4)]
        public decimal VerpPlattenM2 { get; set; }
        [Column("verp_nagelsorte_id")]
        public int? VerpNagelsorteId { get; set; }
        /// <summary>
        /// 1=Trockenmittel, 2=VCI Methode
        /// </summary>
        [Column("verp_konservierung")]
        public int? VerpKonservierung { get; set; }
        [Column("verp_baufeld_id")]
        public int? VerpBaufeldId { get; set; }
        [Column("verp_baufeld_fert_id")]
        public int? VerpBaufeldFertId { get; set; }
        [Column("verp_ohne_boden_fertigen")]
        public bool? VerpOhneBodenFertigen { get; set; }
        [Column("verp_ohne_koepfe_fertigen")]
        public bool? VerpOhneKoepfeFertigen { get; set; }
        [Column("verp_ohne_seiten_fertigen")]
        public bool? VerpOhneSeitenFertigen { get; set; }
        [Column("verp_ohne_deckel_fertigen")]
        public bool? VerpOhneDeckelFertigen { get; set; }
        /// <summary>
        /// Waag verb. Kleinkiste
        /// </summary>
        [Column("verp_cb_sl_ist_aussenhoehe")]
        public bool? VerpCbSlIstAussenhoehe { get; set; }
        [Column("verp_netto_gewicht")]
        public int? VerpNettoGewicht { get; set; }
        /// <summary>
        /// Bruttogewicht Einbauten
        /// </summary>
        [Column("n_tara_einbauten")]
        public int? NTaraEinbauten { get; set; }
        [Column("verp_kunden_artikel_nr")]
        [StringLength(30)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpKundenArtikelNr { get; set; }
        [Column("verp_lk_qk_verschrauben")]
        public bool? VerpLkQkVerschrauben { get; set; }
        [Column("verp_lk_ausfuettern")]
        public bool? VerpLkAusfuettern { get; set; }
        /// <summary>
        /// Distanzbretter an den Seiten
        /// </summary>
        [Column("n_qk_ausfuettern")]
        public bool? NQkAusfuettern { get; set; }
        /// <summary>
        /// IVH- waag. Kiste
        /// </summary>
        [Column("n_seiten_schutzleisten")]
        public bool? NSeitenSchutzleisten { get; set; }
        /// <summary>
        /// Wenn Verpackung von anderer Firma gerfertigt wird
        /// </summary>
        [Column("verp_lieferant_id")]
        public int? VerpLieferantId { get; set; }
        [Column("verp_kopfwinkel_id")]
        public int? VerpKopfwinkelId { get; set; }
        [Column("verp_schwingd_id")]
        public int? VerpSchwingdId { get; set; }
        [Column("verp_schwingd_anz")]
        public int? VerpSchwingdAnz { get; set; }
        [Column("verp_deckelsicherung_id")]
        public int? VerpDeckelsicherungId { get; set; }
        [Column("verp_laschpunkt_id")]
        public int? VerpLaschpunktId { get; set; }
        [Column("verp_sl_bis_dl")]
        public bool? VerpSlBisDl { get; set; }
        [Column("n_verp_preiskat_id")]
        public int? NVerpPreiskatId { get; set; }
        [Column("n_fremd_verpfirma_id")]
        public int? NFremdVerpfirmaId { get; set; }
        [Column("verp_einmalzuschlag_preis")]
        [Precision(19, 4)]
        public decimal? VerpEinmalzuschlagPreis { get; set; }
        [Column("verp_einmalzuschlag_text")]
        [StringLength(80)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string VerpEinmalzuschlagText { get; set; }
        [Column("n_kurzfristigkeitszuschlag_preis")]
        [Precision(19, 4)]
        public decimal? NKurzfristigkeitszuschlagPreis { get; set; }
        [Column("n_collo_laenge")]
        public int? NColloLaenge { get; set; }
        [Column("n_collo_breite")]
        public int? NColloBreite { get; set; }
        [Column("n_collo_hoehe")]
        public int? NColloHoehe { get; set; }
        [Column("n_collo_tara")]
        public int? NColloTara { get; set; }
        [Column("n_collo_kl_anz")]
        public int? NColloKlAnz { get; set; }
        [Column("n_collo_zl_anz")]
        public int? NColloZlAnz { get; set; }
        [Column("n_collo_sl_anz")]
        public int? NColloSlAnz { get; set; }
        [Column("n_collo_fl_anz")]
        public int? NColloFlAnz { get; set; }
        [Column("n_collo_dl_anz")]
        public int? NColloDlAnz { get; set; }
        [Column("n_collo_dlk_anz")]
        public int? NColloDlkAnz { get; set; }
        /// <summary>
        /// Kopfleisten immer senkrecht. Kopf wird nicht gedreht
        /// </summary>
        [Column("n_kstr_kl_senkrecht")]
        public bool? NKstrKlSenkrecht { get; set; }
        /// <summary>
        /// Kopfleisten um Seite und SeitenL einruecken
        /// </summary>
        [Column("n_kstr_kl_um_s_und_sl_einrueck")]
        public bool? NKstrKlUmSUndSlEinrueck { get; set; }
        /// <summary>
        /// Obere ZL nicht nutzen
        /// </summary>
        [Column("n_kstr_zl_ohne_oben")]
        public int? NKstrZlOhneOben { get; set; }
        /// <summary>
        /// Kopfleisten auf Zwischenlage bei 4-Wegeboden
        /// </summary>
        [Column("n_kstr_kl_auf_zwischenl")]
        public bool? NKstrKlAufZwischenl { get; set; }
        /// <summary>
        /// Kopfleisten stehen oben ueber
        /// </summary>
        [Column("n_kstr_kl_oben_ueberstehen")]
        public bool? NKstrKlObenUeberstehen { get; set; }
        /// <summary>
        /// Kopfleisten bis Boden bei Qk-Einrueck=0
        /// </summary>
        [Column("n_kstr_kl_bis_boden_bei_qk0")]
        public bool? NKstrKlBisBodenBeiQk0 { get; set; }
        /// <summary>
        /// Kopfleisten stehen unten ueber
        /// </summary>
        [Column("n_kstr_kl_unten_ueberstehen")]
        public bool? NKstrKlUntenUeberstehen { get; set; }
        /// <summary>
        /// KL bis unten zu QK wenn diese buendig
        /// </summary>
        [Column("n_kstr_kl_bis_qk_wenn_qkeinrueck_null")]
        public bool? NKstrKlBisQkWennQkeinrueckNull { get; set; }
        /// <summary>
        /// KL oben buendig
        /// </summary>
        [Column("n_kstr_kl_oben_buendig")]
        public bool? NKstrKlObenBuendig { get; set; }
        /// <summary>
        /// Seiten stehen auf QK
        /// </summary>
        [Column("n_kstr_seite_auf_qk")]
        public bool? NKstrSeiteAufQk { get; set; }
        /// <summary>
        /// Nur 2 waag. laufende Seitenleisten
        /// </summary>
        [Column("n_kstr_sl_2_waag")]
        public bool? NKstrSl2Waag { get; set; }
        /// <summary>
        /// Seite ohne Futterleisten
        /// </summary>
        [Column("n_kstr_ohne_fl")]
        public bool? NKstrOhneFl { get; set; }
        /// <summary>
        /// Seitenleisten aussen
        /// </summary>
        [Column("n_kstr_li_laseiten")]
        public bool? NKstrLiLaseiten { get; set; }
        /// <summary>
        /// Seite bis auf den Boden
        /// </summary>
        [Column("n_kstr_s_bis_auf_boden")]
        public bool? NKstrSBisAufBoden { get; set; }
        /// <summary>
        /// Seitenleisten waag. innen
        /// </summary>
        [Column("n_kstr_seite_sl_waag_innen")]
        public bool? NKstrSeiteSlWaagInnen { get; set; }
        /// <summary>
        /// Deckel ohne Deckelkopfleisten
        /// </summary>
        [Column("n_kstr_seite_sl_waag_aussen")]
        public bool? NKstrSeiteSlWaagAussen { get; set; }
        /// <summary>
        /// Seitenleisten innen
        /// </summary>
        [Column("n_kstr_seite_sl_neben_qk")]
        public bool? NKstrSeiteSlNebenQk { get; set; }
        /// <summary>
        /// QK immer um SL kuerzen
        /// </summary>
        [Column("n_kstr_qk_um_sl_kuerzen")]
        public bool? NKstrQkUmSlKuerzen { get; set; }
        /// <summary>
        /// Seitenruecksprung bei LK
        /// </summary>
        [Column("n_kstr_seite_ruecksprung")]
        public int? NKstrSeiteRuecksprung { get; set; }
        /// <summary>
        /// Fl wie QK einruecken
        /// </summary>
        [Column("n_kstr_fl_ueber_qk")]
        public bool? NKstrFlUeberQk { get; set; }
        /// <summary>
        /// Seitenleisten innen
        /// </summary>
        [Column("n_kstr_seite_sl_innen")]
        public bool? NKstrSeiteSlInnen { get; set; }
        /// <summary>
        /// Dl auf ueber SL anbringen, sonst zwischen
        /// </summary>
        [Column("n_kstr_deckel_dl_ueber_sl")]
        public bool? NKstrDeckelDlUeberSl { get; set; }
        /// <summary>
        /// Deckelleisten quer laufen lassen
        /// </summary>
        [Column("n_kstr_deckell_quer")]
        public bool? NKstrDeckellQuer { get; set; }
        /// <summary>
        /// Deckelleisten quer laufen lassen
        /// </summary>
        [Column("n_kstr_deckell_aussen")]
        public bool? NKstrDeckellAussen { get; set; }
        /// <summary>
        /// Deckel ohne Deckelkopfleisten
        /// </summary>
        [Column("n_kstr_deckelkl_ohne")]
        public bool? NKstrDeckelklOhne { get; set; }
        /// <summary>
        /// Anzahl Deckelseitenleiste wie LK Anzahl
        /// </summary>
        [Column("n_kstr_deckelslanz_wie_lkanz")]
        public bool? NKstrDeckelslanzWieLkanz { get; set; }
        /// <summary>
        /// Deckel zwischen den Seiten
        /// </summary>
        [Column("n_kstr_deckel_zwischen_s")]
        public bool? NKstrDeckelZwischenS { get; set; }
        /// <summary>
        /// Deckel zwischen den Koepfen
        /// </summary>
        [Column("n_kstr_deckel_zwischen_k")]
        public bool? NKstrDeckelZwischenK { get; set; }
        /// <summary>
        /// Deckelholz nutzen
        /// </summary>
        [Column("n_kstrh_deckel_dh")]
        public bool? NKstrhDeckelDh { get; set; }
        /// <summary>
        /// Deckelkopfleisten wie QK einruecken
        /// </summary>
        [Column("n_kstr_dkl_ueber_qk")]
        public bool? NKstrDklUeberQk { get; set; }
        /// <summary>
        /// Bodenbretter unter Kopf
        /// </summary>
        [Column("n_kstr_bbretter_unter_k")]
        public bool? NKstrBbretterUnterK { get; set; }
        /// <summary>
        /// Bodenbretter bis unter KL
        /// </summary>
        [Column("n_kstr_bbretter_unter_kl")]
        public bool? NKstrBbretterUnterKl { get; set; }
        /// <summary>
        /// Bodenbretter bis unter Bh
        /// </summary>
        [Column("n_kstr_bbretter_unter_bh")]
        public bool? NKstrBbretterUnterBh { get; set; }
        /// <summary>
        /// Kopfleisten um BhHoehe einruecken
        /// </summary>
        [Column("n_kstr_kl_einrueck_bh")]
        public bool? NKstrKlEinrueckBh { get; set; }
        /// <summary>
        /// QkLaenge gleich Aussenbreite
        /// </summary>
        [Column("n_kstr_qklaenge_aussenbreite")]
        public bool? NKstrQklaengeAussenbreite { get; set; }
        /// <summary>
        /// Kopfleisten immer senkrecht. Kopf wird nicht gedreht
        /// </summary>
        [Column("n_kstr_k_s_zfuge")]
        public bool? NKstrKSZfuge { get; set; }
        /// <summary>
        /// Kopf zwischen den Seiten
        /// </summary>
        [Column("n_kstr_k_zwischen_s")]
        public bool? NKstrKZwischenS { get; set; }
        /// <summary>
        /// Wenn Qk einruecken 0 Kopf bis auf Boden
        /// </summary>
        [Column("n_kstr_k_qk0_kopf_auf_boden")]
        public bool? NKstrKQk0KopfAufBoden { get; set; }
        /// <summary>
        /// Seiten stehen auf QK
        /// </summary>
        [Column("n_kstr_qk_ueber_lk")]
        public bool? NKstrQkUeberLk { get; set; }
        /// <summary>
        /// Kistentyp-Steckkiste für VTT Verbinder
        /// </summary>
        [Column("n_kstr_is_steckkiste")]
        public bool? NKstrIsSteckkiste { get; set; }
        /// <summary>
        /// senk. laufende sl an Kopf A
        /// </summary>
        [Column("n_sl_senk_kopf_a")]
        public int? NSlSenkKopfA { get; set; }
        /// <summary>
        /// senk. laufende sl an Kopf A
        /// </summary>
        [Column("n_sl_senk_kopf_b")]
        public int? NSlSenkKopfB { get; set; }
        /// <summary>
        /// Distanzbretter an den Seiten
        /// </summary>
        [Column("c_s_distanz_bretter")]
        [StringLength(10)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CSDistanzBretter { get; set; }
        [Column("c_id")]
        [StringLength(45)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CId { get; set; }
        [Column("c_rahmen_id")]
        [StringLength(45)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CRahmenId { get; set; }
        [Column("n_waehrung_id")]
        public int? NWaehrungId { get; set; }
        [Column("c_artikel_nr")]
        [StringLength(25)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CArtikelNr { get; set; }
        [Column("c_artikel_name")]
        [StringLength(25)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CArtikelName { get; set; }
        /// <summary>
        /// Kopfleistenstaerke
        /// </summary>
        [Column("n_kstrh_kopf_l_staerke")]
        public int? NKstrhKopfLStaerke { get; set; }
        /// <summary>
        /// Kopfleistenstaerke
        /// </summary>
        [Column("n_kstrh_kopf_l_breite")]
        public int? NKstrhKopfLBreite { get; set; }
        /// <summary>
        /// ZL Raster
        /// </summary>
        [Column("n_kstrh_zl_raster")]
        public int? NKstrhZlRaster { get; set; }
        /// <summary>
        /// Seitenleistenstaerke
        /// </summary>
        [Column("n_kstrh_seite_l_staerke")]
        public int? NKstrhSeiteLStaerke { get; set; }
        /// <summary>
        /// Seitenleistenstaerke
        /// </summary>
        [Column("n_kstrh_seite_l_breite")]
        public int? NKstrhSeiteLBreite { get; set; }
        /// <summary>
        /// FL Raster
        /// </summary>
        [Column("n_kstrh_fl_raster")]
        public int? NKstrhFlRaster { get; set; }
        /// <summary>
        /// Deckelleistenstaerke
        /// </summary>
        [Column("n_kstrh_deckel_l_staerke")]
        public int? NKstrhDeckelLStaerke { get; set; }
        /// <summary>
        /// Deckelleistenstaerke
        /// </summary>
        [Column("n_kstrh_deckel_l_breite")]
        public int? NKstrhDeckelLBreite { get; set; }
        [Column("d_ausgelagert")]
        public DateOnly? DAusgelagert { get; set; }
        [Column("c_konstr_opt_name")]
        [StringLength(30)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CKonstrOptName { get; set; }
        /// <summary>
        /// Innenbreite zwischen Wand zu Wand
        /// </summary>
        [Column("n_kstr_ibreite_wand_zu_wand")]
        public bool? NKstrIbreiteWandZuWand { get; set; }
        /// <summary>
        /// kat_grp = 150
        /// </summary>
        [Column("n_kuerzel_id")]
        public int? NKuerzelId { get; set; }
        [Column("n_user_id_created")]
        public int? NUserIdCreated { get; set; }
        [Column("n_user_id_updated")]
        public int? NUserIdUpdated { get; set; }
        [Column("n_user_id_printed")]
        public int? NUserIdPrinted { get; set; }
        [Column("c_info_short_1")]
        [StringLength(15)]
        public string CInfoShort1 { get; set; }
        [Column("c_info_short_2")]
        [StringLength(15)]
        public string CInfoShort2 { get; set; }
        /// <summary>
        /// t_kostenstelle
        /// </summary>
        [Column("n_kostenstelle_id")]
        public int? NKostenstelleId { get; set; }
    }
}