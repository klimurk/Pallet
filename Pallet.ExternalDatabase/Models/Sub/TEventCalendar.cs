// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Pallet.ExternalDatabase.Models
{
    /// <summary>
    /// Enhält alle Ereignisse/Termine
    /// </summary>
    [Table("t_event_calendar")]
    [Index("NErledigt", "NStatus", "NInternalEventType", "CId", Name = "IDX_ERLEDIGT_ID")]
    [Index("NResourceId", "NGroupId", "CId", "NErledigt", Name = "IDX_RESOURCE_GROUP")]
    [Index("NErledigt", "DStart", "NStatus", "CId", Name = "IDX_START")]
    [Index("DStart", Name = "IDX_START_ALONE")]
    [Index("DStart", "NResourceId", Name = "IDX_START_RESOURCE")]
    public partial class TEventCalendar
    {
        [Key]
        [Column("c_id")]
        [StringLength(45)]
        public string CId { get; set; }
        [Column("d_start", TypeName = "datetime")]
        public DateTime DStart { get; set; }
        [Column("d_start_aktuell", TypeName = "datetime")]
        public DateTime? DStartAktuell { get; set; }
        [Column("d_ende_aktuell", TypeName = "datetime")]
        public DateTime? DEndeAktuell { get; set; }
        [Column("d_ende", TypeName = "datetime")]
        public DateTime DEnde { get; set; }
        [Column("n_typ_id")]
        public int NTypId { get; set; }
        [Column("n_optionen")]
        public int? NOptionen { get; set; }
        [Column("n_status")]
        public int? NStatus { get; set; }
        [Column("n_label_farbe")]
        public int? NLabelFarbe { get; set; }
        [Column("c_ort")]
        [StringLength(45)]
        public string COrt { get; set; }
        [Column("n_kunde_id")]
        public int? NKundeId { get; set; }
        [Column("c_notiz", TypeName = "mediumtext")]
        public string CNotiz { get; set; }
        [Column("c_parent_id")]
        [StringLength(45)]
        public string CParentId { get; set; }
        [Column("n_recurrence_idx")]
        public int? NRecurrenceIdx { get; set; }
        [Column("c_text")]
        [StringLength(45)]
        public string CText { get; set; }
        [Column("n_resource_id")]
        [StringLength(45)]
        public string NResourceId { get; set; }
        [Column("n_group_id")]
        public int? NGroupId { get; set; }
        /// <summary>
        /// 1=Verpackung, 2=Geburtstag, 3=Allgemein
        /// </summary>
        [Column("n_internal_event_type")]
        public int? NInternalEventType { get; set; }
        /// <summary>
        /// the minutes before start time when the reminder should appear
        /// </summary>
        [Column("n_reminder_min")]
        public int? NReminderMin { get; set; }
        [Column("d_reminder_date", TypeName = "datetime")]
        public DateTime? DReminderDate { get; set; }
        [Column("n_recurrence_info", TypeName = "mediumtext")]
        public string NRecurrenceInfo { get; set; }
        [Column("c_task_id")]
        [StringLength(40)]
        public string CTaskId { get; set; }
        [Column("m_keys", TypeName = "mediumtext")]
        public string MKeys { get; set; }
        [Column("n_public")]
        public bool? NPublic { get; set; }
        [Column("n_erledigt")]
        public bool? NErledigt { get; set; }
        [Column("n_aktiv")]
        public bool? NAktiv { get; set; }
        [Column("n_baufeld_fert_id")]
        public int? NBaufeldFertId { get; set; }
        [Column("n_baufeld_verp_id")]
        public int? NBaufeldVerpId { get; set; }
        [Column("d_created", TypeName = "timestamp")]
        public DateTime DCreated { get; set; }
    }
}