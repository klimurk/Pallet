// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Pallet.ExternalDatabase.Models
{
    /// <summary>
    /// Kopfdaten zur Rechnung
    /// </summary>
    [Table("t_rechnung")]
    [Index("NKundeId", "NGutschrift", "DGeloescht", Name = "IDX_GUTSCHRIFT")]
    [Index("NKundeId", Name = "IDX_KUNDE")]
    [Index("NKundeId", "NRechnungBezahlt", "DGeloescht", Name = "IDX_KUNDE_BEZAHLT_GELOESCHT")]
    [Index("NKundeId", "NNettoGesamtbetrag", "DRechnungsDatum", Name = "IDX_NETTO_BETRAG")]
    [Index("NRechnungParentId", Name = "IDX_PARENT_ID")]
    [Index("DGedruckt", "NRechnungParentId", "NAusgebucht", "DGeloescht", Name = "IDX_RECH_OPOS")]
    [Index("DGedruckt", "NRechnungParentId", Name = "IDX_RECH_PARENT")]
    public partial class TRechnung
    {
        [Key]
        [Column("n_id")]
        public int NId { get; set; }
        [Column("c_nr")]
        [StringLength(45)]
        public string CNr { get; set; }
        [Column("n_kunde_id")]
        public int NKundeId { get; set; }
        /// <summary>
        /// Der Rechnungsempfaenger
        /// </summary>
        [Column("n_kunde_id_empfaenger")]
        public int NKundeIdEmpfaenger { get; set; }
        [Column("d_rechnungs_datum")]
        public DateOnly? DRechnungsDatum { get; set; }
        [Column("c_adr_firma")]
        [StringLength(70)]
        public string CAdrFirma { get; set; }
        [Column("c_adr_firma_zusatz")]
        [StringLength(45)]
        public string CAdrFirmaZusatz { get; set; }
        [Column("c_adr_feld_1")]
        [StringLength(45)]
        public string CAdrFeld1 { get; set; }
        [Column("c_adr_feld_2")]
        [StringLength(45)]
        public string CAdrFeld2 { get; set; }
        [Column("c_adr_plz_ort")]
        [StringLength(45)]
        public string CAdrPlzOrt { get; set; }
        [Column("n_adr_land_id")]
        public int? NAdrLandId { get; set; }
        [Column("m_bemerkung", TypeName = "mediumtext")]
        public string MBemerkung { get; set; }
        [Column("n_nur_gesamtsumme")]
        public bool? NNurGesamtsumme { get; set; }
        /// <summary>
        /// kat_grp=16
        /// </summary>
        [Column("n_zahlungsbedingung_id")]
        public short? NZahlungsbedingungId { get; set; }
        [Column("n_skonto")]
        [Precision(5, 2)]
        public decimal? NSkonto { get; set; }
        [Column("n_skonto_zahlbar_tage")]
        public int? NSkontoZahlbarTage { get; set; }
        [Column("n_netto_zahlbar_tage")]
        public int? NNettoZahlbarTage { get; set; }
        [Column("d_zahlungsziel")]
        public DateOnly? DZahlungsziel { get; set; }
        [Column("d_zahlungsziel_aktuell")]
        public DateOnly? DZahlungszielAktuell { get; set; }
        [Column("d_created", TypeName = "timestamp")]
        public DateTime DCreated { get; set; }
        /// <summary>
        /// Zeit wann Rechnung gedruckt wurde
        /// </summary>
        [Column("d_gedruckt", TypeName = "datetime")]
        public DateTime? DGedruckt { get; set; }
        [Column("d_mail_verchickt", TypeName = "datetime")]
        public DateTime? DMailVerchickt { get; set; }
        [Column("n_netto_gesamtbetrag")]
        [Precision(19, 2)]
        public decimal NNettoGesamtbetrag { get; set; }
        [Column("n_brutto_gesamtbetrag")]
        [Precision(19, 2)]
        public decimal NBruttoGesamtbetrag { get; set; }
        /// <summary>
        /// manuelle Einstellung
        /// </summary>
        [Column("n_rechnung_bezahlt")]
        public sbyte NRechnungBezahlt { get; set; }
        [Column("d_rechnung_bezahlt", TypeName = "datetime")]
        public DateTime? DRechnungBezahlt { get; set; }
        [Column("n_skonto_gewaehrt")]
        [Precision(19, 2)]
        public decimal NSkontoGewaehrt { get; set; }
        /// <summary>
        /// Anzahl der Tage wie weit Skonto ueberschritten wurde
        /// </summary>
        [Column("n_skonto_ueberschritten")]
        public int? NSkontoUeberschritten { get; set; }
        /// <summary>
        /// 0=Rechnung 1=Gutschrift
        /// </summary>
        [Column("n_gutschrift")]
        public bool NGutschrift { get; set; }
        /// <summary>
        /// Referenz auf den Parentdatensatz
        /// </summary>
        [Column("n_rechnung_parent_id")]
        public int? NRechnungParentId { get; set; }
        [Column("n_gegenkonto")]
        public int? NGegenkonto { get; set; }
        [Column("n_steuerparagraphen")]
        public int? NSteuerparagraphen { get; set; }
        [Column("c_buchungs_text")]
        [StringLength(50)]
        [MySqlCharSet("utf8mb3")]
        [MySqlCollation("utf8_general_ci")]
        public string CBuchungsText { get; set; }
        [Column("c_kennzahl")]
        [StringLength(10)]
        public string CKennzahl { get; set; }
        [Column("n_mahnstufe")]
        public int NMahnstufe { get; set; }
        [Column("n_mahnstufe_tel")]
        public int NMahnstufeTel { get; set; }
        [Column("n_mahngebuehr")]
        [Precision(19, 2)]
        public decimal? NMahngebuehr { get; set; }
        /// <summary>
        /// Rechnung liegt beim Rechtsanwalt
        /// </summary>
        [Column("n_rechtsanwalt")]
        public bool NRechtsanwalt { get; set; }
        [Column("d_rechtsanwalt_uebergeben", TypeName = "datetime")]
        public DateTime? DRechtsanwaltUebergeben { get; set; }
        [Column("m_bemerkung_opos", TypeName = "mediumtext")]
        public string MBemerkungOpos { get; set; }
        [Column("n_ausgebucht")]
        public bool NAusgebucht { get; set; }
        [Column("m_ausgebucht_grund", TypeName = "mediumtext")]
        public string MAusgebuchtGrund { get; set; }
        [Column("d_geloescht", TypeName = "datetime")]
        public DateTime? DGeloescht { get; set; }
        [Column("n_geloescht_user_id")]
        public int? NGeloeschtUserId { get; set; }
        [Column("n_user_id_erstellt")]
        public int? NUserIdErstellt { get; set; }
        /// <summary>
        /// ID des Benutzers der den Datensatz geändert hat.
        /// </summary>
        [Column("n_user_id_geaendert")]
        public int? NUserIdGeaendert { get; set; }
        /// <summary>
        /// Datum wann der Datensatz geändert wurde
        /// </summary>
        [Column("d_geaendert_am", TypeName = "datetime")]
        public DateTime? DGeaendertAm { get; set; }
        /// <summary>
        /// Gesamtpreis errechnet oder definiert
        /// </summary>
        [Column("n_gesamt_preis_def")]
        public bool? NGesamtPreisDef { get; set; }
        [Column("n_mwst")]
        [Precision(5, 2)]
        public decimal? NMwst { get; set; }
        [Column("n_sortierung_ausdruck_posten_pos")]
        public bool? NSortierungAusdruckPostenPos { get; set; }
    }
}